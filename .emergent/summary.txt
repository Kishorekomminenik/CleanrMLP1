<analysis>
The previous AI engineer's work trajectory involved building and debugging the SHINE application from initial concept through several key features. Initially, significant time was spent troubleshooting environment and connectivity issues, including Expo React Native file watching limits and external URL routing, leading to the creation and extensive debugging of a simplified HTML/JavaScript web preview. Core development focused on implementing PAGE-9-EARNINGS and PAGE-10-SUPPORT. After addressing persistent authentication flow problems in both the web preview and the main React Native application, the engineer successfully delivered PAGE-11-BOOKINGS (booking management for all roles) and PAGE-12-DISCOVERY (search, favorites, partner profiles). Currently, the engineer is mid-way through a significant architectural change: implementing a platform-set pricing model, having successfully completed the backend API migration (Phase 1) and is about to start the frontend page patches (Phase 2).
</analysis>

<product_requirements>
The SHINE application is a full-stack platform for professional services, targeting Customer, Partner, and Owner roles, aimed at building an Uber-like home services marketplace.

**Completed Features:**
1.  **PAGE-9-EARNINGS (Partner Earnings & Payouts):** Allows partners to view earnings, charts, statements, manage instant payouts, bank accounts, and tax forms. Owners have read-only aggregate views.
2.  **PAGE-10-SUPPORT (Support & Disputes):** A comprehensive in-app help center for customers (FAQs, issues, refunds), partners (training, disputes), and owners (queue, metrics, refund approval).
3.  **PAGE-11-BOOKINGS (Bookings â€” Lists & Details):** An Uber-style booking management system for all roles. Customers view upcoming/past trips, track, cancel, rebook, and download invoices. Partners manage jobs, navigate, and access live job tracking. Owners view a read-only table with filters.
4.  **PAGE-12-DISCOVERY (Discovery & Favorites):** A customer-facing feature for searching services/partners, browsing categories, marking favorites, and viewing partner profiles. Partners can preview their profiles, and owners see aggregated analytics.

**Current Major Change Request (CHG-PLATFORM-PRICING-001):**
Switching to an Uber-style platform-set pricing model where SHINE, not partners, controls all pricing. This involves updating APIs, relevant frontend pages (Checkout, Earnings, Discovery, Subscriptions, Settings), and the data model.
</product_requirements>

<key_technical_concepts>
-   **Full-stack Architecture**: React Native (Expo) frontend, FastAPI backend, MongoDB database.
-   **API Design**: RESTful API endpoints, prefixed with .
-   **Authentication**: JWT-based, role-based access control (Customer, Partner, Owner), MFA.
-   **UI Framework**: React Native (Expo) with Expo Router for navigation, and a plain HTML/JavaScript web preview for debugging.
-   **Environment Management**:  files for  and .
-   **Package Management**: Yarn for frontend dependencies.
</key_technical_concepts>

<code_architecture>


-   **/app/backend/server.py**:
    -   **Importance**: The central FastAPI backend.
    -   **Changes Made**: Expanded significantly to include PAGE-9 and PAGE-10 API endpoints. Further extended for PAGE-11-BOOKINGS (customer/partner lists, detail, invoice, cancel). Further extended for PAGE-12-DISCOVERY (search, partner profiles, favorites, owner analytics). Most recently, it was heavily modified for the platform pricing model, adding , ,  endpoints, and modifying existing , ,  endpoints to enforce platform pricing and remove partner control. Also includes new Pydantic models for pricing.
-   **/app/frontend/src/contexts/AuthContext.tsx**:
    -   **Importance**: Manages authentication state.
    -   **Changes Made**: Modified to include debugging, network timeout, and enhanced initial token verification for Expo Go.
-   **/app/frontend/src/navigation/AppShell.tsx**:
    -   **Importance**: Defines tab-based navigation.
    -   **Changes Made**: Updated to integrate new screens: , , , . Further updated to include , , . Most recently, updated to integrate , ,  by replacing Favorites and adding new Discover tabs for respective roles.
-   **/app/frontend/src/screens/PartnerEarningsScreen.tsx**:
    -   **Importance**: UI for Partner Earnings & Payouts.
    -   **Changes Made**: Newly created.
-   **/app/frontend/src/screens/CustomerSupportScreen.tsx**, **/app/frontend/src/screens/PartnerSupportScreen.tsx**, **/app/frontend/src/screens/OwnerSupportScreen.tsx**:
    -   **Importance**: UI for Support & Disputes for each role.
    -   **Changes Made**: Newly created.
-   **/app/frontend/src/screens/CustomerBookingsScreen.tsx**, **/app/frontend/src/screens/PartnerJobsScreen.tsx**, **/app/frontend/src/screens/OwnerBookingsScreen.tsx**:
    -   **Importance**: UI for PAGE-11-BOOKINGS.
    -   **Changes Made**: Newly created to implement booking lists, detail sheets, and actions for each role.
-   **/app/frontend/src/screens/CustomerDiscoveryScreen.tsx**, **/app/frontend/src/screens/PartnerDiscoveryScreen.tsx**, **/app/frontend/src/screens/OwnerDiscoveryScreen.tsx**:
    -   **Importance**: UI for PAGE-12-DISCOVERY.
    -   **Changes Made**: Newly created to implement search, partner profiles, favorites (customer), profile preview (partner), and analytics (owner).
-   **/app/frontend/.env**:
    -   **Importance**: Stores frontend environment variables.
    -   **Changes Made**: Created and configured with .
-   **/app/frontend/metro.config.js**:
    -   **Importance**: Configures Metro bundler.
    -   **Changes Made**: Optimized to reduce watched files.
-   **/app/frontend/app/_layout.tsx**:
    -   **Importance**: Root layout for Expo Router, wraps app with AuthProvider.
    -   **Changes Made**: Newly created.
-   **/app/frontend/app/index.tsx**:
    -   **Importance**: Handles initial authentication routing for Expo Router.
    -   **Changes Made**: Newly created to check auth state and redirect to  or .
-   **/app/frontend/app/auth.tsx**:
    -   **Importance**: Login/Signup interface for Expo Router.
    -   **Changes Made**: Newly created.
-   **/app/frontend/app/app.tsx**:
    -   **Importance**: Renders AppShell when authenticated.
    -   **Changes Made**: Newly created.
-   **/app/web/index.html**:
    -   **Importance**: Temporary web preview for debugging.
    -   **Changes Made**: Newly created. Implemented basic auth forms and API testing. Debugged login form visibility and associated JavaScript logic.
</code_architecture>

<pending_tasks>
-   Complete Phase 2 of the  change request: applying frontend page patches for PAGE-12-DISCOVERY, PAGE-13-SUBSCRIPTIONS, PAGE-18-SETTINGS, PAGE-5-CHECKOUT, and PAGE-9-EARNINGS.
-   Run comprehensive frontend and end-to-end testing for the platform pricing changes.
</pending_tasks>

<current_work>
The AI engineer is currently implementing the CHG-PLATFORM-PRICING-001 change request, which is a major architectural shift to an Uber-style platform-set pricing model. This change centralizes all pricing control within SHINE, removing partners' ability to set prices.

The work is being executed in phases. **Phase 1: Backend Pricing Engine** has been successfully completed. This involved:
-   Implementing new FastAPI endpoints:
    -   : The core pricing engine calculating fares with surge, zones, and modifiers.
    -   : An owner-only endpoint for accessing pricing configurations.
    -   : Calculates partner payouts based on platform-set fares and a 75% take rate.
-   Modifying existing FastAPI endpoints:
    -   : Updated to accept an  and enforce platform pricing.
    -   : Now returns platform-calculated  instead of partner prices.
    -   : Includes  with platform pricing information.
-   Implementing security and business logic: Old partner price fields are now ignored, surge pricing is dynamically applied, and a 75% take rate for partners is enforced.
-   Updating mock discovery data and adding new Pydantic models in  to support the new pricing structure.

All backend APIs for this phase have been thoroughly tested and confirmed to be working correctly with a 100% success rate. The engineer is now poised to begin **Phase 2: Frontend Page Patches**, which will involve updating five specific frontend pages to reflect the new platform pricing model.
</current_work>

<optional_next_step>
Implement Phase 2 of the : Frontend Page Patches.
</optional_next_step>
